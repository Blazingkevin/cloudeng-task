name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:
    

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: "latest"
      
      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin
          gke-gcloud-auth-plugin --version

      - name: Docker configuration
        run: |
          gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://${{ secrets.GCP_REGION }}-docker.pkg.dev

      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: "${{ secrets.GKE_CLUSTER_NAME }}"
          location: "${{ secrets.GCP_REGION }}"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.5

      - name: Export Kubeconfig
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} --region ${{ secrets.GCP_REGION }}

      - name: Build Docker Image
        run: docker build -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-repo/gke-terraform-api:v1.0.0 .

      - name: Push Docker Image to Google Artifact Registry
        run: docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-repo/gke-terraform-api:v1.0.0

      # - name: Terraform Init
      #   run: terraform init
      #   working-directory: ./terraform

      - name: Terraform Apply
        run: |
          terraform apply -var="project_id=${{ secrets.GCP_PROJECT_ID }}" -var="kube_config_path=${{ env.KUBE_CONFIG_PATH }}" -auto-approve -lock=false
          API_BASE_ENDPOINT=$(terraform output -raw kubernetes_endpoint)
          curl -f http://$API_BASE_ENDPOINT/time || exit 1
        working-directory: ./terraform

      # - name: Test API Endpoint
      #   run: |
      #     sleep 60  # Wait for the LoadBalancer to get an IP and for the time service to be ready
      #     API_BASE_ENDPOINT=$(terraform output -raw kubernetes_endpoint)
      #     echo "Hitting API at $API_BASE_ENDPOINT"
      #     curl -f http://$API_BASE_ENDPOINT/time || exit 1

