name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: "latest"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.5

      - name: Authenticate Docker to Artifact Registry
        run: |
          echo "${{ secrets.GCP_SA_KEY }}" | docker login -u _json_key --password-stdin https://us-central1-docker.pkg.dev

  build_and_push_docker:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Build Docker Image
        run: docker build -t us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-repo/gke-terraform-api:v1.0.0 .

      - name: Push Docker Image to Google Artifact Registry
        run: docker push us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-repo/gke-terraform-api:v1.0.0

  terraform:
    runs-on: ubuntu-latest
    needs: build_and_push_docker
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./terraform

      - name: Export Kubeconfig
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} --region ${{ secrets.GCP_REGION }}

  deploy:
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Terraform Apply for Deployment
        run: terraform apply -var="project_id=${{ secrets.GCP_PROJECT_ID }}" -auto-approve -lock=false
        working-directory: ./terraform

  test_api:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Test API Endpoint
        run: |
          sleep 60  # Wait for the LoadBalancer to get an IP and for the time service to be ready
          API_BASE_ENDPOINT=$(terraform output -raw kubernetes_endpoint)
          echo "Hitting API at $API_BASE_ENDPOINT"
          curl -f http://$API_BASE_ENDPOINT/time || exit 1
